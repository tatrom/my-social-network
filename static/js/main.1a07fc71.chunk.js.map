{"version":3,"sources":["Components/Navbar/Navbar.module.css","Components/Profile/MyPost/MyPosts.module.css","Components/Profile/MyPost/Post/Post.module.css","Components/Dialogs/Dialogs.module.css","Components/Dialogs/DialogsItem/DialogsItem.module.css","Components/Header/Header.module.css","Components/Navbar/Users/User.module.css","Components/Navbar/Users/AllUsers.module.css","Components/Profile/Profile.module.css","Components/Profile/ProfileInfo/ProfileInfo.module.css","Components/Dialogs/Message/Message.module.css","Components/Header/Header.tsx","Components/Navbar/Users/User.tsx","Components/Navbar/Users/AllUsers.tsx","Components/Navbar/Navbar.tsx","Components/Profile/MyPost/Post/Post.tsx","Components/Profile/MyPost/MyPosts.tsx","Components/Profile/ProfileInfo/ProfileInfo.tsx","Components/Profile/Profile.tsx","Components/Dialogs/DialogsItem/DialogsItem.tsx","Components/Dialogs/Message/Message.tsx","Components/Dialogs/Dialogs.tsx","App.tsx","Redux/state.ts","index.tsx"],"names":["module","exports","Header","className","s","header","src","alt","User","props","user","name","date","AllUsers","users","map","el","id","Navbar","nav","to","activeClassName","active","Post","post","text","message","likes","MyPosts","posts","newTextAreaElement","React","createRef","mypost","ref","value","newPostText","onChange","current","undefined","updateNewPostText","onKeyPress","e","addPost","OnKeyPressHandler","charCode","button","onClick","ProfileInfo","description","Profile","content","DialogItem","dialogItem","Message","Dialogs","dialogsElements","dialogs","dialog","messageElements","messages","dialogsItems","App","state","store","getState","Users","path","render","ProfilePage","bind","newText","DialogPage","_state","this","_callSubscriber","trim","newPost","push","subscribe","callback","EntireTreeRender","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1a07fc71.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__1dWpI\",\"active\":\"Navbar_active__3b0QJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mypost\":\"MyPosts_mypost__c-Uf_\",\"button\":\"MyPosts_button__3JaKz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__-tayL\",\"text\":\"Post_text__3c3Dz\",\"likes\":\"Post_likes__2Id0C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1rZ3k\",\"dialogItems\":\"Dialogs_dialogItems__PNT3P\",\"messages\":\"Dialogs_messages__285JR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogItem\":\"DialogsItem_dialogItem__2LSwQ\",\"active\":\"DialogsItem_active__3JhD6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1CGKd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user\":\"User_user__34p39\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"users\":\"AllUsers_users__2F06X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Profile_content__33cQd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"description\":\"ProfileInfo_description__1FWdy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__28aa8\"};","import React from 'react';\nimport s from './Header.module.css'\n\nexport const Header = () => {\n    return <div className={s.header}>\n        <img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSCCmV4hdR0WwQdDksdPtHdYPSGo27bnOl0dA&usqp=CAU\" alt=\"\"/>\n\n    </div>\n}","import React from \"react\";\nimport s from './User.module.css'\n\ntype UserType = {\n    id: number\n    name: string\n    date: number\n}\n\nexport function User(props: UserType) {\n    return (\n        <div className={s.user}>\n            <div>User Name:{props.name}</div>\n            <div>Date of registration:{props.date}</div>\n        </div>\n    )\n}","import React from \"react\";\nimport {User} from \"./User\";\nimport s from './AllUsers.module.css'\n\ntype UserType = {\n    id: number\n    name: string\n    date: number\n}\n\ntype AllUsersType = {\n    users: Array<UserType>\n}\n\nexport function AllUsers(props: AllUsersType) {\n    let users = props.users.map( (el) => <User id={el.id} date={el.date} name={el.name} />)\n\n    return (\n        <div className={s.users}>\n            {users}\n        </div>\n    )\n}","import React from 'react';\nimport {NavLink} from 'react-router-dom';\nimport s from './Navbar.module.css'\nimport {AllUsers} from \"./Users/AllUsers\";\n\ntype UserType = {\n    id: number\n    name: string\n    date: number\n}\n\ntype NavbarType = {\n    users: Array<UserType>\n}\nexport const Navbar = (props: NavbarType) => {\n    return <div className={s.nav}>\n        <ul>\n            <li><NavLink to={\"/profile\"} activeClassName={s.active}>Profile</NavLink></li>\n            <li><NavLink to={\"/dialogs\"} activeClassName={s.active}>Messages</NavLink></li>\n            <li><NavLink to={\"/news\"} activeClassName={s.active}>News</NavLink></li>\n            <li><NavLink to={\"/music\"} activeClassName={s.active}>Music</NavLink></li>\n            <li><NavLink to={\"/settings\"} activeClassName={s.active}>Settings</NavLink></li>\n            <li>\n                <AllUsers users={props.users}/>\n            </li>\n        </ul>\n    </div>\n}","import React from 'react';\nimport s from './Post.module.css'\n\ntype PostType = {\n    id: number\n    message: string\n    likes: number\n}\nexport const Post = (props: PostType) => {\n    return (\n        <div className={s.post}>\n            <div>\n                <img\n                    src=\"https://thumbs-prod.si-cdn.com/IjbgoCcHvUa6ISjPAvS8T6DTHA8=/fit-in/1600x0/https://public-media.si-cdn.com/filer/97/2c/972c4531-0552-4a49-b51b-4cdb5066bd1d/tacc1157_05_faceright_10k_rgb.jpg\"\n                    alt=\"img\"/>\n            </div>\n            <div className={s.text}> {props.message}</div>\n            <div className={s.likes}> likes {props.likes}</div>\n        </div>\n    )\n}","import React, {ChangeEvent} from 'react';\nimport s from './MyPosts.module.css'\nimport {Post} from \"./Post/Post\";\nimport {log} from \"util\";\n\ntype PostType = {\n    id: number\n    message: string\n    likes: number\n}\n\ntype MyPostType = {\n    posts: Array<PostType>\n    addPost: () => void\n    updateNewPostText: (newText: string) => void\n    newPostText: string\n}\nexport const MyPosts = (props: MyPostType) => {\n    let posts = props.posts.map( (el) => <Post id={el.id} message={el.message} likes={el.likes} />)\n    let newTextAreaElement = React.createRef<HTMLTextAreaElement>()\n\n    function addPost() {\n\n            props.addPost()\n    }\n\n    const UpdateText = () => {\n        let text = newTextAreaElement.current?.value\n        if ( text !== undefined ) {\n        props.updateNewPostText(text)\n        }\n    }\n\n    let OnKeyPressHandler = (e: number) => {\n        e === 13 && props.addPost()\n    }\n    return (\n        <div className={s.mypost}>\n            <textarea ref={newTextAreaElement}  value={props.newPostText} onChange={UpdateText} onKeyPress={ (e) => OnKeyPressHandler(e.charCode)}/>\n            <button className={s.button} onClick={addPost}>Add post</button>\n            <div className={s.posts}>\n                {posts}\n            </div>\n        </div>\n    )\n}","import React from \"react\";\nimport s from './ProfileInfo.module.css'\n\nexport function ProfileInfo() {\n    return (\n        <div>\n            <div>\n                <img\n                    src=\"https://st2.depositphotos.com/1606672/5285/i/600/depositphotos_52852189-stock-photo-recreational-entrepreneur-man-with-laptop.jpg\"\n                    alt=\"img\"/>\n            </div>\n            <div className={s.description}>ava + description</div>\n        </div>\n    )\n}","import React from 'react';\nimport s from './Profile.module.css'\nimport {MyPosts} from \"./MyPost/MyPosts\";\nimport {ProfileInfo} from \"./ProfileInfo/ProfileInfo\";\n\ntype PostType = {\n    id: number\n    message: string\n    likes: number\n}\ntype ProfileType = {\n    posts: Array<PostType>\n    addPost: () => void\n    updateNewPostText: (newText: string) => void\n    newPostText: string\n}\nexport const Profile = (props: ProfileType) => {\n    return (\n        <div className={s.content}>\n            <ProfileInfo/>\n            <MyPosts posts={props.posts} addPost={props.addPost} updateNewPostText={props.updateNewPostText} newPostText={props.newPostText}/>\n        </div>\n    )\n}\n","import React from 'react';\nimport {NavLink} from 'react-router-dom';\nimport s from \"./DialogsItem.module.css\";\n\ntype DialogItemType = {\n    name: string\n}\n\nexport const DialogItem = (props: DialogItemType) => {\n    return (\n        <div className={s.dialogItem}>\n            <NavLink to={'/dialogs/'} className={s.dialogItem}>{props.name}</NavLink>\n        </div>\n    )\n}\n","import s from \"./Message.module.css\";\nimport React from \"react\";\n\n\ntype MessageType = {\n    message: string\n}\n\nexport const Message = (props: MessageType) => {\n    return (\n        <div className={s.message}>{props.message}</div>\n    )\n}","import React from 'react';\nimport s from './Dialogs.module.css'\nimport {DialogItem} from './DialogsItem/DialogsItem';\nimport {Message} from \"./Message/Message\";\n\ntype DialogType = {\n    id: number\n    name: string\n}\ntype MessageType = {\n    id: number\n    message: string\n}\ntype DialogsType = {\n    dialogs: Array<DialogType>\n    messages: Array<MessageType>\n}\nexport const Dialogs = (props: DialogsType) => {\n\n    let dialogsElements = props.dialogs.map(dialog => <DialogItem name={dialog.name}/>);\n    let messageElements = props.messages.map(message => <Message message={message.message}/>);\n\n    return (\n        <div className={s.dialogs}>\n            <div className={s.dialogsItems}>\n                {dialogsElements}\n            </div>\n            <div className={s.messages}>\n                {messageElements}\n            </div>\n        </div>\n    )\n}\n","import React from 'react';\nimport './App.css';\nimport {Header} from \"./Components/Header/Header\";\nimport {Navbar} from \"./Components/Navbar/Navbar\";\nimport {Profile} from \"./Components/Profile/Profile\";\nimport {Dialogs} from \"./Components/Dialogs/Dialogs\";\nimport {BrowserRouter, Route} from 'react-router-dom';\nimport {StateType, StoreType} from \"./Redux/state\";\n\n\ntype PostType = {\n    id: number\n    message: string\n    likes: number\n}\n\ntype DialogsType = {\n    id: number\n    name: string\n}\n\ntype MessagesType = {\n    id: number\n    message: string\n\n}\n\ntype UserType = {\n    id: number\n    name: string\n    date: number\n}\ntype DialogPageType = {\n    messages: Array<MessagesType>\n    dialogs: Array<DialogsType>\n}\n\ntype ProfilePageType = {\n    posts: Array<PostType>\n    newText: string\n}\n\ntype UsersType = {\n    users: Array<UserType>\n}\n\n\ntype AppPropsType = {\n  store:StoreType;\n}\n\nfunction App(props: AppPropsType) {\n    const state = props.store.getState();\n    return (\n        <BrowserRouter>\n        <div className=\"App\">\n            <Header/>\n            <Navbar users={state.Users.users}/>\n            <div className={\"App_content\"}>\n                <Route path=\"/profile\" render={() => <Profile posts={state.ProfilePage.posts} addPost={props.store.addPost.bind(props.store)} updateNewPostText={props.store.updateNewPostText.bind(props.store)} newPostText={state.ProfilePage.newText}/>}/>\n                <Route path=\"/dialogs\"render={() => <Dialogs dialogs={state.DialogPage.dialogs} messages={state.DialogPage.messages}/>}/>\n                <Route path=\"/news\"/>\n                <Route path=\"/music\"/>\n                <Route path=\"/settings\"/>\n            </div>\n        </div>\n        </BrowserRouter>\n    );\n}\n\nexport default App;\n","export type StoreType = {\n    _state: StateType\n    updateNewPostText: (newText: string) => void\n    addPost: () => void\n    _callSubscriber: () => void\n    subscribe: (callback: () => void) => void\n    getState: () => StateType\n}\nexport const store: StoreType = {\n    _state: {\n        DialogPage: {\n            messages: [\n                {id: 1, message: \"Hello, i'm first message\"},\n                {id: 2, message: \"Hello, I'm second message\"},\n                {id: 3, message: \"Hello, I'm third message\"},\n                {id: 4, message: \"Hello, I'm fourth message\"},\n            ],\n            dialogs: [\n                {id: 1, name: \"Anna\"},\n                {id: 1, name: \"Roman\"},\n                {id: 1, name: \"Renat\"},\n                {id: 1, name: \"Anatoly\"}\n            ]\n        },\n        ProfilePage: {\n            posts: [\n                {id: 1, message: \"Its a first post\", likes: 3},\n                {id: 2, message: \"Its a second post\", likes: 3},\n                {id: 3, message: \"Its a third post\", likes: 3},\n                {id: 4, message: \"Its a fourth post\", likes: 3},\n                {id: 5, message: \"Its a fifth post\", likes: 3},\n            ],\n            newText: \"\"\n\n        },\n        Users: {\n            users: [\n                {id: 1, name: \"Roman\", date: 2020},\n                {id: 2, name: \"Elena\", date: 2019},\n                {id: 3, name: \"Sergey\", date: 2018},\n                {id: 4, name: \"Vlad\", date: 2020}\n            ]\n        }\n\n    },\n    updateNewPostText(newText: string) {\n        this._state.ProfilePage.newText = newText;\n        this._callSubscriber()\n    },\n    addPost() {\n        let text = this._state.ProfilePage.newText.trim()\n        if (text) {\n            let newPost: PostType = {\n                id: 1,\n                message: text,\n                likes: 5\n            }\n            this._state.ProfilePage.posts.push(newPost);\n            this._state.ProfilePage.newText = '';\n            this._callSubscriber();\n        }\n    },\n    _callSubscriber() {\n\n    },\n    subscribe(callback) {\n        this._callSubscriber = callback;\n    },\n    getState() {\n        return this._state\n    }\n}\n\ntype PostType = {\n    id: number\n    message: string\n    likes: number\n}\n\ntype DialogsType = {\n    id: number\n    name: string\n}\n\ntype MessagesType = {\n    id: number\n    message: string\n\n}\n\ntype UserType = {\n    id: number\n    name: string\n    date: number\n}\ntype DialogPageType = {\n    messages: Array<MessagesType>\n    dialogs: Array<DialogsType>\n}\n\ntype ProfilePageType = {\n    posts: Array<PostType>\n    newText: string\n}\n\ntype UsersType = {\n    users: Array<UserType>\n}\n\nexport type StateType = {\n    DialogPage: DialogPageType\n    ProfilePage: ProfilePageType\n    Users: UsersType\n}","import './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {store} from './Redux/state'\nimport ReactDOM from \"react-dom\";\nimport React from \"react\";\n\nfunction EntireTreeRender() {\n    ReactDOM.render(\n        <React.StrictMode>\n            <App store={store}/>\n        </React.StrictMode>,\n        document.getElementById('root')\n    );\n}\nEntireTreeRender()\nstore.subscribe(EntireTreeRender);\n"],"sourceRoot":""}