{"version":3,"sources":["Components/Navbar/Navbar.module.css","Components/Profile/MyPost/MyPosts.module.css","Components/Profile/MyPost/Post/Post.module.css","Components/Dialogs/Dialogs.module.css","Components/Dialogs/DialogsItem/DialogsItem.module.css","Components/Header/Header.module.css","Components/Profile/Profile.module.css","Components/Profile/ProfileInfo/ProfileInfo.module.css","Components/Dialogs/Message/Message.module.css","Components/Users/Users.module.css","Components/Header/Header.tsx","Components/Navbar/Navbar.tsx","Components/Profile/ProfileInfo/ProfileInfo.tsx","Redux/profile-reducer.ts","Components/Profile/MyPost/Post/Post.tsx","Components/Profile/MyPost/MyPostsContainer.tsx","Components/Profile/MyPost/MyPosts.tsx","Components/Profile/Profile.tsx","Redux/dialog-reducer.ts","Components/Dialogs/DialogsItem/DialogsItem.tsx","Components/Dialogs/Message/Message.tsx","Components/Dialogs/DialogsContainer.tsx","Components/Dialogs/Dialogs.tsx","Redux/users-reducer.ts","Components/Users/UsersContainer.tsx","Components/Users/Users.tsx","App.tsx","Redux/redux-store.ts","index.tsx"],"names":["module","exports","Header","className","s","header","src","alt","Navbar","nav","to","activeClassName","active","ProfileInfo","description","ADD_POST","UPDATE_NEW_POST_TEXT","initialState","posts","id","message","likes","newText","profileReducer","state","action","type","text","trim","stateCopy","newPost","push","Post","props","post","MyPostsContainer","connect","ProfilePage","newPostText","dispatch","addPost","updateText","map","el","newTextAreaElement","React","createRef","mypost","ref","value","onChange","current","undefined","onKeyPress","e","key","OnKeyPressHandler","button","onClick","Profile","content","UPDATE_NEW_MESSAGE_BODY","SEND_MESSAGE","messages","dialogs","name","newMessageBody","dialogReducer","body","DialogItem","dialogItem","Message","DialogsContainer","dialogPage","DialogPage","newMessageChange","newMessage","sendMessage","dialogsElements","dialog","messageElements","dialogsItems","placeholder","target","onKeyPressHandler","FOLLOW","UNFOLLOW","SET_USERS","users","followed","fullName","status","location","city","country","photo","usersReducer","u","userId","UserContainer","Users","followUser","followAC","unfollowUser","unfollowAC","setUsers","setUsersAC","App","path","render","reducers","combineReducers","store","createStore","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.11040090.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__1dWpI\",\"active\":\"Navbar_active__3b0QJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mypost\":\"MyPosts_mypost__c-Uf_\",\"button\":\"MyPosts_button__3JaKz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__-tayL\",\"text\":\"Post_text__3c3Dz\",\"likes\":\"Post_likes__2Id0C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1rZ3k\",\"dialogItems\":\"Dialogs_dialogItems__PNT3P\",\"messages\":\"Dialogs_messages__285JR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogItem\":\"DialogsItem_dialogItem__2LSwQ\",\"active\":\"DialogsItem_active__3JhD6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1CGKd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Profile_content__33cQd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"description\":\"ProfileInfo_description__1FWdy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__28aa8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"users\":\"Users_users__2r5Ge\"};","import React from 'react';\nimport s from './Header.module.css'\n\nexport const Header = () => {\n    return <div className={s.header}>\n        <img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSCCmV4hdR0WwQdDksdPtHdYPSGo27bnOl0dA&usqp=CAU\" alt=\"\"/>\n\n    </div>\n}","import React from 'react';\nimport {NavLink} from 'react-router-dom';\nimport s from './Navbar.module.css'\nimport {AllUsers} from \"./Users/AllUsers\";\n\nexport const Navbar = () => {\n    return <div className={s.nav}>\n        <ul>\n            <li><NavLink to={\"/profile\"} activeClassName={s.active}>Profile</NavLink></li>\n            <li><NavLink to={\"/dialogs\"} activeClassName={s.active}>Messages</NavLink></li>\n            <li><NavLink to={\"/news\"} activeClassName={s.active}>News</NavLink></li>\n            <li><NavLink to={\"/music\"} activeClassName={s.active}>Music</NavLink></li>\n            <li><NavLink to={\"/settings\"} activeClassName={s.active}>Settings</NavLink></li>\n            <li><NavLink to={\"/users\"} activeClassName={s.active}>Users</NavLink></li>\n            <li>\n            </li>\n        </ul>\n    </div>\n}","import React from \"react\";\nimport s from './ProfileInfo.module.css'\n\nexport function ProfileInfo() {\n    return (\n        <div>\n            <div>\n                <img\n                    src=\"https://st2.depositphotos.com/1606672/5285/i/600/depositphotos_52852189-stock-photo-recreational-entrepreneur-man-with-laptop.jpg\"\n                    alt=\"img\"/>\n            </div>\n            <div className={s.description}>ava + description</div>\n        </div>\n    )\n}","import {ActionTypes, PostType, ProfilePageType} from \"./state\";\n\nconst ADD_POST = 'ADD-POST';\nconst UPDATE_NEW_POST_TEXT = \"UPDATE-NEW-POST-TEXT\";\n\nlet initialState = {\n        posts: [\n            {id: 1, message: \"Its a first post\", likes: 3},\n            {id: 2, message: \"Its a second post\", likes: 3},\n            {id: 3, message: \"Its a third post\", likes: 3},\n            {id: 4, message: \"Its a fourth post\", likes: 3},\n            {id: 5, message: \"Its a fifth post\", likes: 3},\n        ],\n        newText: \"\"\n    }\n\nconst profileReducer = (state: ProfilePageType = initialState, action: ActionTypes) => {\n    switch (action.type) {\n        case ADD_POST:\n            let text = state.newText.trim()\n            const stateCopy = {...state, posts: [...state.posts]}\n            if (text) {\n                let newPost: PostType = {\n                    id: 1,\n                    message: text,\n                    likes: 5\n                }\n                stateCopy.posts.push(newPost)\n                stateCopy.newText = ''\n            }\n            return stateCopy\n        case UPDATE_NEW_POST_TEXT:\n            state.newText = action.newText;\n            return {...state};\n\n        default:\n            return state;\n    }\n}\n\nexport const addPostActionCreator = (): ActionTypes => ({type: ADD_POST})\nexport const updateNewPostTextActionCreator = (newText: string): ActionTypes => ({\n    type: UPDATE_NEW_POST_TEXT,\n    newText: newText\n})\n\nexport default profileReducer","import React from 'react';\nimport s from './Post.module.css'\n\ntype PostType = {\n    id: number\n    message: string\n    likes: number\n}\nexport const Post = (props: PostType) => {\n    return (\n        <div className={s.post}>\n            <div>\n                <img\n                    src=\"https://thumbs-prod.si-cdn.com/IjbgoCcHvUa6ISjPAvS8T6DTHA8=/fit-in/1600x0/https://public-media.si-cdn.com/filer/97/2c/972c4531-0552-4a49-b51b-4cdb5066bd1d/tacc1157_05_faceright_10k_rgb.jpg\"\n                    alt=\"img\"/>\n            </div>\n            <div className={s.text}> {props.message}</div>\n            <div className={s.likes}> likes {props.likes}</div>\n        </div>\n    )\n}","import React from 'react';\nimport {addPostActionCreator, updateNewPostTextActionCreator} from \"../../../Redux/profile-reducer\";\nimport {ActionTypes, StateType} from \"../../../Redux/state\";\nimport {MyPosts} from \"./MyPosts\";\nimport {connect} from \"react-redux\";\n\n\nlet MapStateToStore = (state: StateType) => {\n    return {\n        posts: state.ProfilePage.posts,\n        newPostText: state.ProfilePage.newText\n    }\n}\nlet MapDispatchToStore = (dispatch: (action: ActionTypes) => void) => {\n    return {\n        addPost: () => {\n            dispatch(addPostActionCreator())\n        },\n        updateText: (text: string) => {\n            dispatch(updateNewPostTextActionCreator(text))\n        }\n    }\n}\n\nexport const MyPostsContainer = connect(MapStateToStore, MapDispatchToStore)(MyPosts)\n","import React, {KeyboardEvent} from 'react';\nimport s from './MyPosts.module.css'\nimport {Post} from \"./Post/Post\";\n\ntype PostType = {\n    id: number\n    message: string\n    likes: number\n}\n\ntype MyPostType = {\n    posts: Array<PostType>\n    addPost: () => void\n    updateText: (text: string) => void\n    newPostText: string\n}\n\n\nexport const MyPosts = (props: MyPostType) => {\n    let posts = props.posts.map( (el) => <Post id={el.id} message={el.message} likes={el.likes} />)\n    let newTextAreaElement = React.createRef<HTMLTextAreaElement>()\n\n    function addPost() {\n        props.addPost()\n    }\n    const UpdateText = () => {\n        let text = newTextAreaElement.current?.value\n        if ( text !== undefined ) {\n        props.updateText(text)\n        }\n    }\n    let OnKeyPressHandler = (e: KeyboardEvent<HTMLTextAreaElement> ) => {\n        e.key === \"Enter\" && props.addPost()\n    }\n    return (\n        <div className={s.mypost}>\n            <textarea ref={newTextAreaElement}  value={props.newPostText} onChange={UpdateText} onKeyPress={ (e) => OnKeyPressHandler(e)}/>\n            <button className={s.button} onClick={addPost}>Add post</button>\n            <div className={s.posts}>\n                {posts}\n            </div>\n        </div>\n    )\n}","import React from 'react';\nimport s from './Profile.module.css'\nimport {ProfileInfo} from \"./ProfileInfo/ProfileInfo\";\nimport {MyPostsContainer} from \"./MyPost/MyPostsContainer\";\n\n\nexport const Profile = () => {\n    return (\n        <div className={s.content}>\n            <ProfileInfo/>\n            <MyPostsContainer />\n        </div>\n    )\n}\n","import {ActionTypes, DialogPageType} from \"./state\";\n\nconst UPDATE_NEW_MESSAGE_BODY = \"UPDATE-NEW-MESSAGE-BODY\";\nconst SEND_MESSAGE = \"SEND-MESSAGE\";\n\nlet initialState = {\n    messages: [\n        {id: 1, message: \"Hello, i'm first message\"},\n        {id: 2, message: \"Hello, I'm second message\"},\n        {id: 3, message: \"Hello, I'm third message\"},\n        {id: 4, message: \"Hello, I'm fourth message\"},\n    ],\n    dialogs: [\n        {id: 1, name: \"Anna\"},\n        {id: 1, name: \"Roman\"},\n        {id: 1, name: \"Renat\"},\n        {id: 1, name: \"Anatoly\"}\n    ],\n    newMessageBody: \"\"\n}\n\nexport const dialogReducer = (state: DialogPageType = initialState, action: ActionTypes) => {\n    switch (action.type) {\n        case UPDATE_NEW_MESSAGE_BODY: {\n            const stateCopy = {...state}\n            stateCopy.newMessageBody = action.body;\n            debugger;\n            return stateCopy;\n        }\n        case SEND_MESSAGE: {\n            let body = state.newMessageBody.trim();\n            const stateCopy = {...state, messages: [...state.messages]}\n            if (body) {\n                stateCopy.newMessageBody = '';\n                stateCopy.messages.push({id: 6, message: body})\n            }\n            return {...stateCopy}\n        }\n\n        default:\n            return state\n    }\n}\n\nexport const sendMessageCreator = (): ActionTypes => ({type: SEND_MESSAGE})\nexport const updateNewMessageBodyCreator = (text: string): ActionTypes => ({type: UPDATE_NEW_MESSAGE_BODY, body: text})\n\nexport default dialogReducer","import React from 'react';\nimport {NavLink} from 'react-router-dom';\nimport s from \"./DialogsItem.module.css\";\n\ntype DialogItemType = {\n    name: string\n}\n\nexport const DialogItem = (props: DialogItemType) => {\n    return (\n        <div className={s.dialogItem}>\n            <NavLink to={'/dialogs/'} className={s.dialogItem}>{props.name}</NavLink>\n        </div>\n    )\n}\n","import s from \"./Message.module.css\";\nimport React from \"react\";\n\n\ntype MessageType = {\n    message: string\n}\n\nexport const Message = (props: MessageType) => {\n    return (\n        <div className={s.message}>{props.message}</div>\n    )\n}","import React from 'react';\nimport {sendMessageCreator, updateNewMessageBodyCreator} from \"../../Redux/dialog-reducer\";\nimport {Dialogs} from \"./Dialogs\";\nimport StoreContext from \"../../StoreContext\";\nimport {connect} from \"react-redux\";\nimport {ActionTypes, StateType} from \"../../Redux/state\";\n\n\n\nlet MapStateToStore = (state: StateType) => {\n    return {\n        dialogPage: state.DialogPage\n    }\n}\n\nlet MapDispatchToProps = (dispatch: (action: ActionTypes) => void) => {\n    return {\n        newMessageChange: (newMessage: string) => {\n        dispatch(updateNewMessageBodyCreator(newMessage))\n    },\n        sendMessage:() =>  dispatch(sendMessageCreator())\n}\n}\n\nexport const DialogsContainer = connect(MapStateToStore,MapDispatchToProps )(Dialogs)\n","import React, {ChangeEvent, KeyboardEvent} from 'react';\nimport s from './Dialogs.module.css'\nimport {DialogItem} from './DialogsItem/DialogsItem';\nimport {Message} from \"./Message/Message\";\nimport {DialogPageType} from \"../../Redux/state\";\n\n\ntype DialogsType = {\n    dialogPage: DialogPageType\n    sendMessage: () => void\n    newMessageChange: (newMessage: string) => void\n}\nexport const Dialogs = (props: DialogsType) => {\n\n    let dialogsElements = props.dialogPage.dialogs.map(dialog => <DialogItem name={dialog.name}/>);\n    let messageElements = props.dialogPage.messages.map(message => <Message message={message.message}/>);\n    let newMessageBody = props.dialogPage.newMessageBody;\n\n    let onSendMessageClick = () => {\n        props.sendMessage();\n    }\n    let onNewMessageChange = (e: ChangeEvent<HTMLTextAreaElement>) => {\n        debugger;\n        let body = e.target.value;\n        props.newMessageChange(body)\n\n    }\n    const onKeyPressHandler = (e: KeyboardEvent<HTMLTextAreaElement>) => {\n        if (e.key === \"Enter\")\n            props.sendMessage()\n    }\n    return (\n        <div className={s.dialogs}>\n            <div className={s.dialogsItems}>\n                {dialogsElements}\n            </div>\n            <div className={s.messages}>\n                <div>{messageElements}</div>\n                <div>\n                    <div><textarea value={newMessageBody}\n                                   placeholder='Enter your message'\n                                   onChange={onNewMessageChange}\n                                   onKeyPress={e =>onKeyPressHandler(e)}\n                    /></div>\n                    <div>\n                        <button onClick={onSendMessageClick}>Send</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n","import {ActionTypes, UsersType, UserType} from \"./state\";\n\nconst FOLLOW = \"FOLLOW\"\nconst UNFOLLOW = \"UNFOLLOW\"\nconst SET_USERS = \"SET_USERS\"\n\nlet initialState = {\n    users: [\n        {\n            id: 1,\n            followed: false,\n            fullName: \"Roman\",\n            status: \"React developer\",\n            location: {\n                city: \"Kiev\",\n                country: \"Ukraine\"\n            },\n            photo: \"https://www.thebalancecareers.com/thmb/BOjyOw3eW7uaNyBaz6vo3ozM4Mg=/300x200/filters:no_upscale():max_bytes(150000):strip_icc():saturation(0.2):brightness(10):contrast(5)/GettyImages-746096729-5bf437b0c9e77c005126418a.jpg\"\n        },\n        {\n            id: 2,\n            followed: true,\n            fullName: \"Anna \",\n            status: \"office manager\",\n            location: {\n                city: \"Kiev\",\n                country: \"Ukraine\"\n            },\n            photo: \"https://www.thebalancecareers.com/thmb/BOjyOw3eW7uaNyBaz6vo3ozM4Mg=/300x200/filters:no_upscale():max_bytes(150000):strip_icc():saturation(0.2):brightness(10):contrast(5)/GettyImages-746096729-5bf437b0c9e77c005126418a.jpg\"\n        },\n        {\n            id: 3,\n            followed: false,\n            fullName: \"Renat \",\n            status: \"student\",\n            location: {\n                city: \"Kiev\",\n                country: \"Ukraine\"\n            },\n            photo: \"https://www.thebalancecareers.com/thmb/BOjyOw3eW7uaNyBaz6vo3ozM4Mg=/300x200/filters:no_upscale():max_bytes(150000):strip_icc():saturation(0.2):brightness(10):contrast(5)/GettyImages-746096729-5bf437b0c9e77c005126418a.jpg\"\n\n        },\n    ]\n}\n\nconst usersReducer = (state: UsersType = initialState, action: ActionTypes) => {\n    switch (action.type) {\n        case FOLLOW:\n            return {...state, users: state.users.map(u => u.id === action.userId ? {...u, followed: true} : u)}\n        case UNFOLLOW:\n            return {...state, users: state.users.map(u => u.id === action.userId ? {...u, followed: false} : u)}\n        case SET_USERS:\n            return {...state, users: [...state.users, ...action.users]}\n        default: return state;\n    }\n}\n\nexport const followAC = (userId: number): ActionTypes => ({type: FOLLOW, userId})\nexport const unfollowAC = (userId: number): ActionTypes => ({type: UNFOLLOW, userId})\nexport const setUsersAC = (users: Array<UserType>): ActionTypes => ({type: SET_USERS, users: users})\n\nexport default usersReducer","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport {Users} from \"./Users\";\nimport {ActionTypes, StateType, UserType} from \"../../Redux/state\";\nimport {followAC, setUsersAC, unfollowAC} from \"../../Redux/users-reducer\";\n\nlet MapStateToProps = (state: StateType) => {\n    return {\n        users: state.Users.users\n    }\n}\n\nlet MapDispatchToProps = (dispatch: (action: ActionTypes) => void) => {\n    return {\n        followUser: (userId: number) => {\n            dispatch(followAC(userId))\n        },\n        unfollowUser: (userId: number) => {\n            dispatch(unfollowAC(userId))\n        },\n        setUsers: (users: Array<UserType>) => {\n            dispatch(setUsersAC(users))\n        }\n    }\n}\n\nexport const UserContainer = connect(MapStateToProps, MapDispatchToProps)(Users)","import React from \"react\";\nimport {UserType} from \"../../Redux/state\";\nimport s from './Users.module.css'\n\ntype UsersType = {\n    users: Array<UserType>\n    followUser: (id: number) => void\n    unfollowUser: (id: number) => void\n    setUsers: (users: Array<UserType>) => void\n}\n\n\nexport function Users(props: UsersType) {\n    return (\n        <div className={s.users}>\n            {props.users.map(u => <div>\n                <div>{u.fullName}</div>\n                <div>{u.status}</div>\n                <div>{ u.followed ? <button onClick={ () => props.unfollowUser(u.id)}>Unfollow</button> : <button onClick={ () => props.followUser(u.id)}>Follow</button>}</div>\n                <div>{u.location.country}</div>\n                <div>{u.location.city}</div>\n                <img src={u.photo} />\n            </div>)}\n        </div>\n    )\n}","import React from 'react';\nimport './App.css';\nimport {Header} from \"./Components/Header/Header\";\nimport {Navbar} from \"./Components/Navbar/Navbar\";\nimport {Profile} from \"./Components/Profile/Profile\";\nimport {Route} from 'react-router-dom';\nimport {DialogsContainer} from \"./Components/Dialogs/DialogsContainer\";\nimport {UserContainer} from \"./Components/Users/UsersContainer\";\n\n\n\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Header/>\n            <Navbar/>\n            <div className={\"App_content\"}>\n                <Route path=\"/profile\" render={() => <Profile />}/>\n                <Route path=\"/dialogs\" render={() => <DialogsContainer/>}/>\n                <Route path=\"/news\"/>\n                <Route path=\"/music\"/>\n                <Route path=\"/settings\"/>\n                <Route path=\"/users\" render={() => <UserContainer />} />\n            </div>\n        </div>\n\n    );\n}\n\nexport default App;\n","import {combineReducers,createStore} from \"redux\";\nimport dialogReducer from \"./dialog-reducer\";\nimport profileReducer from \"./profile-reducer\";\nimport usersReducer from \"./users-reducer\";\n\nlet reducers = combineReducers({\n    DialogPage: dialogReducer,\n    ProfilePage: profileReducer,\n    Users: usersReducer\n});\nlet store = createStore(reducers)\nexport default store;","import './index.css';\nimport App from './App';\nimport store from './Redux/redux-store'\nimport ReactDOM from \"react-dom\";\nimport React from \"react\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\n\nReactDOM.render(\n    <BrowserRouter>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </BrowserRouter>,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}