{"version":3,"sources":["Components/Navbar/Navbar.module.css","Components/Profile/MyPost/MyPosts.module.css","Components/Profile/MyPost/Post/Post.module.css","Components/Dialogs/Dialogs.module.css","Components/Dialogs/DialogsItem/DialogsItem.module.css","Components/Header/Header.module.css","Components/Navbar/Users/User.module.css","Components/Navbar/Users/AllUsers.module.css","Components/Profile/Profile.module.css","Components/Profile/ProfileInfo/ProfileInfo.module.css","Components/Dialogs/Message/Message.module.css","Components/Header/Header.tsx","Components/Navbar/Users/User.tsx","Components/Navbar/Users/AllUsers.tsx","Components/Navbar/Navbar.tsx","Components/Profile/ProfileInfo/ProfileInfo.tsx","Redux/profile-reducer.ts","Components/Profile/MyPost/Post/Post.tsx","Components/Profile/MyPost/MyPosts.tsx","Components/Profile/MyPost/MyPostsContainer.tsx","Components/Profile/Profile.tsx","Redux/dialog-reducer.ts","Components/Dialogs/DialogsItem/DialogsItem.tsx","Components/Dialogs/Message/Message.tsx","Components/Dialogs/Dialogs.tsx","Components/Dialogs/DialogsContainer.tsx","App.tsx","Redux/users-reducer.ts","Redux/redux-store.ts","index.tsx"],"names":["module","exports","Header","className","s","header","src","alt","User","props","user","name","date","AllUsers","users","map","el","id","Navbar","nav","to","activeClassName","active","ProfileInfo","description","ADD_POST","UPDATE_NEW_POST_TEXT","initialState","posts","message","likes","newText","profileReducer","state","action","type","text","trim","newPost","push","Post","post","MyPosts","newTextAreaElement","React","createRef","mypost","ref","value","newPostText","onChange","current","undefined","updateText","onKeyPress","e","key","addPost","OnKeyPressHandler","button","onClick","MyPostsContainer","dispatch","Profile","content","bind","UPDATE_NEW_MESSAGE_BODY","SEND_MESSAGE","messages","dialogs","newMessageBody","dialogReducer","body","DialogItem","dialogItem","Message","Dialogs","dialogsElements","dialogPage","dialog","messageElements","dialogsItems","placeholder","target","newMessageChange","sendMessage","onKeyPressHandler","DialogsContainer","newMessage","App","Users","path","render","ProfilePage","DialogPage","usersReducer","reducers","combineReducers","store","createStore","EntireTreeRender","ReactDOM","getState","document","getElementById","subscribe"],"mappings":"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","file":"static/js/main.a694e34e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__1dWpI\",\"active\":\"Navbar_active__3b0QJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mypost\":\"MyPosts_mypost__c-Uf_\",\"button\":\"MyPosts_button__3JaKz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__-tayL\",\"text\":\"Post_text__3c3Dz\",\"likes\":\"Post_likes__2Id0C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1rZ3k\",\"dialogItems\":\"Dialogs_dialogItems__PNT3P\",\"messages\":\"Dialogs_messages__285JR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogItem\":\"DialogsItem_dialogItem__2LSwQ\",\"active\":\"DialogsItem_active__3JhD6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1CGKd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user\":\"User_user__34p39\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"users\":\"AllUsers_users__2F06X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Profile_content__33cQd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"description\":\"ProfileInfo_description__1FWdy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__28aa8\"};","import React from 'react';\nimport s from './Header.module.css'\n\nexport const Header = () => {\n    return <div className={s.header}>\n        <img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSCCmV4hdR0WwQdDksdPtHdYPSGo27bnOl0dA&usqp=CAU\" alt=\"\"/>\n\n    </div>\n}","import React from \"react\";\nimport s from './User.module.css'\n\ntype UserType = {\n    id: number\n    name: string\n    date: number\n}\n\nexport function User(props: UserType) {\n    return (\n        <div className={s.user}>\n            <div>User Name:{props.name}</div>\n            <div>Date of registration:{props.date}</div>\n        </div>\n    )\n}","import React from \"react\";\nimport {User} from \"./User\";\nimport s from './AllUsers.module.css'\n\ntype UserType = {\n    id: number\n    name: string\n    date: number\n}\n\ntype AllUsersType = {\n    users: Array<UserType>\n}\n\nexport function AllUsers(props: AllUsersType) {\n    let users = props.users.map( (el) => <User id={el.id} date={el.date} name={el.name} />)\n\n    return (\n        <div className={s.users}>\n            {users}\n        </div>\n    )\n}","import React from 'react';\nimport {NavLink} from 'react-router-dom';\nimport s from './Navbar.module.css'\nimport {AllUsers} from \"./Users/AllUsers\";\n\ntype UserType = {\n    id: number\n    name: string\n    date: number\n}\n\ntype NavbarType = {\n    users: Array<UserType>\n}\nexport const Navbar = (props: NavbarType) => {\n    return <div className={s.nav}>\n        <ul>\n            <li><NavLink to={\"/profile\"} activeClassName={s.active}>Profile</NavLink></li>\n            <li><NavLink to={\"/dialogs\"} activeClassName={s.active}>Messages</NavLink></li>\n            <li><NavLink to={\"/news\"} activeClassName={s.active}>News</NavLink></li>\n            <li><NavLink to={\"/music\"} activeClassName={s.active}>Music</NavLink></li>\n            <li><NavLink to={\"/settings\"} activeClassName={s.active}>Settings</NavLink></li>\n            <li>\n                <AllUsers users={props.users}/>\n            </li>\n        </ul>\n    </div>\n}","import React from \"react\";\nimport s from './ProfileInfo.module.css'\n\nexport function ProfileInfo() {\n    return (\n        <div>\n            <div>\n                <img\n                    src=\"https://st2.depositphotos.com/1606672/5285/i/600/depositphotos_52852189-stock-photo-recreational-entrepreneur-man-with-laptop.jpg\"\n                    alt=\"img\"/>\n            </div>\n            <div className={s.description}>ava + description</div>\n        </div>\n    )\n}","import {ActionTypes, PostType, ProfilePageType} from \"./state\";\n\nconst ADD_POST = 'ADD-POST';\nconst UPDATE_NEW_POST_TEXT = \"UPDATE-NEW-POST-TEXT\";\n\nlet initialState = {\n        posts: [\n            {id: 1, message: \"Its a first post\", likes: 3},\n            {id: 2, message: \"Its a second post\", likes: 3},\n            {id: 3, message: \"Its a third post\", likes: 3},\n            {id: 4, message: \"Its a fourth post\", likes: 3},\n            {id: 5, message: \"Its a fifth post\", likes: 3},\n        ],\n        newText: \"\"\n    }\n\nconst profileReducer = (state: ProfilePageType = initialState, action: ActionTypes) => {\n    switch (action.type) {\n        case ADD_POST:\n            let text = state.newText.trim()\n            if (text) {\n                let newPost: PostType = {\n                    id: 1,\n                    message: text,\n                    likes: 5\n                }\n                state.posts.push(newPost)\n                state.newText = ''\n            }\n            return state\n        case UPDATE_NEW_POST_TEXT:\n            state.newText = action.newText;\n            return state;\n\n        default:\n            return state;\n    }\n}\n\nexport const addPostActionCreator = (): ActionTypes => ({type: ADD_POST})\nexport const updateNewPostTextActionCreator = (newText: string): ActionTypes => ({\n    type: UPDATE_NEW_POST_TEXT,\n    newText: newText\n})\n\nexport default profileReducer","import React from 'react';\nimport s from './Post.module.css'\n\ntype PostType = {\n    id: number\n    message: string\n    likes: number\n}\nexport const Post = (props: PostType) => {\n    return (\n        <div className={s.post}>\n            <div>\n                <img\n                    src=\"https://thumbs-prod.si-cdn.com/IjbgoCcHvUa6ISjPAvS8T6DTHA8=/fit-in/1600x0/https://public-media.si-cdn.com/filer/97/2c/972c4531-0552-4a49-b51b-4cdb5066bd1d/tacc1157_05_faceright_10k_rgb.jpg\"\n                    alt=\"img\"/>\n            </div>\n            <div className={s.text}> {props.message}</div>\n            <div className={s.likes}> likes {props.likes}</div>\n        </div>\n    )\n}","import React, {KeyboardEvent} from 'react';\nimport s from './MyPosts.module.css'\nimport {Post} from \"./Post/Post\";\n\ntype PostType = {\n    id: number\n    message: string\n    likes: number\n}\n\ntype MyPostType = {\n    posts: Array<PostType>\n    addPost: () => void\n    updateText: (text: string) => void\n    newPostText: string\n}\n\n\nexport const MyPosts = (props: MyPostType) => {\n    let posts = props.posts.map( (el) => <Post id={el.id} message={el.message} likes={el.likes} />)\n    let newTextAreaElement = React.createRef<HTMLTextAreaElement>()\n\n    function addPost() {\n        props.addPost()\n    }\n    const UpdateText = () => {\n        let text = newTextAreaElement.current?.value\n        if ( text !== undefined ) {\n        props.updateText(text)\n        }\n    }\n    let OnKeyPressHandler = (e: KeyboardEvent<HTMLTextAreaElement> ) => {\n        e.key === \"Enter\" && props.addPost()\n    }\n    return (\n        <div className={s.mypost}>\n            <textarea ref={newTextAreaElement}  value={props.newPostText} onChange={UpdateText} onKeyPress={ (e) => OnKeyPressHandler(e)}/>\n            <button className={s.button} onClick={addPost}>Add post</button>\n            <div className={s.posts}>\n                {posts}\n            </div>\n        </div>\n    )\n}","import React, {KeyboardEvent} from 'react';\nimport {Post} from \"./Post/Post\";\nimport { addPostActionCreator, updateNewPostTextActionCreator} from \"../../../Redux/profile-reducer\";\nimport {ActionTypes, ProfilePageType} from \"../../../Redux/state\";\nimport {MyPosts} from \"./MyPosts\";\n\ntype PostType = {\n    id: number\n    message: string\n    likes: number\n}\n\ntype MyPostType = {\n    state: ProfilePageType\n    dispatch: (action: ActionTypes) => void\n}\n\n\nexport const MyPostsContainer = (props: MyPostType) => {\n    const addPost = () =>  {\n        props.dispatch(addPostActionCreator())\n    }\n\n    const UpdateText = (text: string) => {\n        props.dispatch(updateNewPostTextActionCreator(text))\n    }\n\n    return (\n       <MyPosts addPost={addPost} updateText={UpdateText} newPostText={props.state.newText} posts={props.state.posts} />\n    )\n}","import React from 'react';\nimport s from './Profile.module.css'\nimport {MyPosts} from \"./MyPost/MyPosts\";\nimport {ProfileInfo} from \"./ProfileInfo/ProfileInfo\";\nimport {ActionTypes, ProfilePageType} from \"../../Redux/state\";\nimport {MyPostsContainer} from \"./MyPost/MyPostsContainer\";\n\n\ntype ProfileType = {\n    state: ProfilePageType\n    dispatch: (action: ActionTypes) => void\n}\nexport const Profile = (props: ProfileType) => {\n    return (\n        <div className={s.content}>\n            <ProfileInfo/>\n            <MyPostsContainer  state={props.state} dispatch={props.dispatch.bind(props.dispatch)}/>\n        </div>\n    )\n}\n","import {ActionTypes, DialogPageType} from \"./state\";\n\nconst UPDATE_NEW_MESSAGE_BODY = \"UPDATE-NEW-MESSAGE-BODY\";\nconst SEND_MESSAGE = \"SEND-MESSAGE\";\n\nlet initialState = {\n    messages: [\n        {id: 1, message: \"Hello, i'm first message\"},\n        {id: 2, message: \"Hello, I'm second message\"},\n        {id: 3, message: \"Hello, I'm third message\"},\n        {id: 4, message: \"Hello, I'm fourth message\"},\n    ],\n    dialogs: [\n        {id: 1, name: \"Anna\"},\n        {id: 1, name: \"Roman\"},\n        {id: 1, name: \"Renat\"},\n        {id: 1, name: \"Anatoly\"}\n    ],\n    newMessageBody: \"\"\n}\n\nexport const dialogReducer = (state: DialogPageType = initialState, action: ActionTypes) => {\n    switch (action.type) {\n        case UPDATE_NEW_MESSAGE_BODY:\n            state.newMessageBody = action.body;\n            return state;\n        case SEND_MESSAGE:\n            let body = state.newMessageBody;\n            state.newMessageBody = '';\n            state.messages.push({id: 6, message: body})\n            return state\n        default:\n            return state\n    }\n}\n\nexport const sendMessageCreator = (): ActionTypes => ({type: SEND_MESSAGE})\nexport const updateNewMessageBodyCreator = (text: string): ActionTypes => ({type: UPDATE_NEW_MESSAGE_BODY, body: text})\n\nexport default dialogReducer","import React from 'react';\nimport {NavLink} from 'react-router-dom';\nimport s from \"./DialogsItem.module.css\";\n\ntype DialogItemType = {\n    name: string\n}\n\nexport const DialogItem = (props: DialogItemType) => {\n    return (\n        <div className={s.dialogItem}>\n            <NavLink to={'/dialogs/'} className={s.dialogItem}>{props.name}</NavLink>\n        </div>\n    )\n}\n","import s from \"./Message.module.css\";\nimport React from \"react\";\n\n\ntype MessageType = {\n    message: string\n}\n\nexport const Message = (props: MessageType) => {\n    return (\n        <div className={s.message}>{props.message}</div>\n    )\n}","import React, {ChangeEvent, KeyboardEvent} from 'react';\nimport s from './Dialogs.module.css'\nimport {DialogItem} from './DialogsItem/DialogsItem';\nimport {Message} from \"./Message/Message\";\nimport {ActionTypes, DialogPageType} from \"../../Redux/state\";\nimport { sendMessageCreator, updateNewMessageBodyCreator} from \"../../Redux/dialog-reducer\";\n\n\ntype DialogsType = {\n    dialogPage: DialogPageType\n    sendMessage: () => void\n    newMessageChange: (newMessage: string) => void\n}\nexport const Dialogs = (props: DialogsType) => {\n\n    let dialogsElements = props.dialogPage.dialogs.map(dialog => <DialogItem name={dialog.name}/>);\n    let messageElements = props.dialogPage.messages.map(message => <Message message={message.message}/>);\n    let newMessageBody = props.dialogPage.newMessageBody;\n\n    let onSendMessageClick = () => {\n        props.sendMessage();\n    }\n    let onNewMessageChange = (e: ChangeEvent<HTMLTextAreaElement>) => {\n        let body = e.target.value;\n        props.newMessageChange(body)\n\n    }\n    const onKeyPressHandler = (e: KeyboardEvent<HTMLTextAreaElement>) => {\n        if (e.key === \"Enter\")\n            props.sendMessage()\n    }\n    return (\n        <div className={s.dialogs}>\n            <div className={s.dialogsItems}>\n                {dialogsElements}\n            </div>\n            <div className={s.messages}>\n                <div>{messageElements}</div>\n                <div>\n                    <div><textarea value={newMessageBody}\n                                   placeholder='Enter your message'\n                                   onChange={onNewMessageChange}\n                                   onKeyPress={e =>onKeyPressHandler(e)}\n                    /></div>\n                    <div>\n                        <button onClick={onSendMessageClick}>Send</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React, {ChangeEvent, KeyboardEvent} from 'react';\nimport s from './Dialogs.module.css'\nimport {DialogItem} from './DialogsItem/DialogsItem';\nimport {Message} from \"./Message/Message\";\nimport {ActionTypes, DialogPageType} from \"../../Redux/state\";\nimport { sendMessageCreator, updateNewMessageBodyCreator} from \"../../Redux/dialog-reducer\";\nimport {Dialogs} from \"./Dialogs\";\n\n\ntype DialogsType = {\n    state: DialogPageType\n    dispatch: (action: ActionTypes) => void\n\n}\nexport const DialogsContainer = (props: DialogsType) => {\n\n\n    let onSendMessageClick = () => {\n        props.dispatch(sendMessageCreator());\n    }\n    let onNewMessageChange = (newMessage: string) => {\n        props.dispatch(updateNewMessageBodyCreator(newMessage))\n\n    }\n    return (\n        <Dialogs dialogPage={props.state} newMessageChange={onNewMessageChange} sendMessage={onSendMessageClick} />\n    )\n}\n","import React from 'react';\nimport './App.css';\nimport {Header} from \"./Components/Header/Header\";\nimport {Navbar} from \"./Components/Navbar/Navbar\";\nimport {Profile} from \"./Components/Profile/Profile\";\nimport {Dialogs} from \"./Components/Dialogs/Dialogs\";\nimport {BrowserRouter, Route} from 'react-router-dom';\nimport {ActionTypes, StateType, StoreType} from \"./Redux/state\";\nimport {DialogsContainer} from \"./Components/Dialogs/DialogsContainer\";\n\n\ntype AppPropsType = {\n    state: StateType;\n    dispatch: (action: ActionTypes) => void\n}\n\nfunction App(props: AppPropsType) {\n    return (\n        <div className=\"App\">\n            <Header/>\n            <Navbar users={props.state.Users.users}/>\n            <div className={\"App_content\"}>\n                <Route path=\"/profile\" render={() => <Profile state={props.state.ProfilePage}\n                                                              dispatch={props.dispatch.bind(props.state)}/>}/>\n                <Route path=\"/dialogs\" render={() => <DialogsContainer state={props.state.DialogPage}\n                                                              dispatch={props.dispatch.bind(props.state)}/>}/>\n                <Route path=\"/news\"/>\n                <Route path=\"/music\"/>\n                <Route path=\"/settings\"/>\n            </div>\n        </div>\n\n    );\n}\n\nexport default App;\n","import {ActionTypes, UsersType} from \"./state\";\n\nlet initialState = {\n    users: [\n        {id: 1, name: \"Roman\", date: 2020},\n        {id: 2, name: \"Elena\", date: 2019},\n        {id: 3, name: \"Sergey\", date: 2018},\n        {id: 4, name: \"Vlad\", date: 2020}\n    ]\n}\n\nconst usersReducer = (state: UsersType = initialState, action: ActionTypes) => {\n    return state\n}\n\nexport default usersReducer","import {combineReducers,createStore} from \"redux\";\nimport dialogReducer from \"./dialog-reducer\";\nimport profileReducer from \"./profile-reducer\";\nimport usersReducer from \"./users-reducer\";\n\nlet reducers = combineReducers({\n    DialogPage: dialogReducer,\n    ProfilePage: profileReducer,\n    Users: usersReducer\n});\nlet store = createStore(reducers)\nexport default store;","import './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './Redux/redux-store'\nimport ReactDOM from \"react-dom\";\nimport React from \"react\";\nimport {BrowserRouter} from \"react-router-dom\";\n\nfunction EntireTreeRender() {\n    ReactDOM.render(\n        <BrowserRouter>\n            <App state={store.getState()} dispatch={store.dispatch}/>\n        </BrowserRouter>,\n        document.getElementById('root')\n    );\n}\nEntireTreeRender()\nstore.subscribe(EntireTreeRender);\n"],"sourceRoot":""}